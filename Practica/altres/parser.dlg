<<
/* parser.dlg -- DLG Description of scanner
 *
 * Generated from: examen0.g
 *
 * Terence Parr, Will Cohen, and Hank Dietz: 1989-2001
 * Purdue University Electrical Engineering
 * With AHPCRC, University of Minnesota
 * ANTLR Version 1.33MR33
 */

#define ANTLR_VERSION	13333
#include "pcctscfg.h"
#include "pccts_stdio.h"

#include <string> 
#include <iostream>

using namespace std; 

typedef struct {
  string kind;	string text; 
} Attrib;

void zzcr_attr(Attrib *attr, int type, char *text);

#define AST_FIELDS string kind; string text; 
#define zzcr_ast(as, attr, ttype, textt) as = new AST;\
(as)->kind = (attr)->kind; (as)->text = (attr)->text;\
(as)->right = NULL; (as)->down = NULL; 
#define createASTlist(name) (*_root)=new AST;((*_root))->kind=name;((*_root))->right=NULL;((*_root))->down=_sibling;
#include "antlr.h"
#include "ast.h"
#include "tokens.h"
#include "dlgdef.h"
LOOKAHEAD

void
#ifdef __USE_PROTOS
zzerraction(void)
#else
zzerraction()
#endif
{
	(*zzerr)("invalid token");
	zzadvance();
	zzskip();
}
>>


%%START

@
	<<
		NLA = 1;
	>>

[\ \n]
	<<
		NLA = SPACE;
    zzskip();   
	>>

[A-Z][a-zA-Z0-9\_]*
	<<
		NLA = VARi;
	>>

[a-z][a-zA-Z0-9\_@]*
	<<
		NLA = ATOMi;
	>>

%%
